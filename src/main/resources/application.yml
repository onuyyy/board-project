debug: false
# actuator? endpoint ?? ???
management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    com.web.board_project: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/board
    username: onuy
    password: P@ssw0rd
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
  sql:
    init:
      mode: always
  # spring data 활용 설정
  data.rest:
    base-path:  /api
    detection-strategy: annotated
  thymeleaf3:
    decoupled-logic: true

  security:
    oauth2:
      client:
        registration:
          # Oauth2의 인증을 제공하는 공급자를 Spring에게 알려줘야 한다 (카카오)
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            # 특수 문자가 들어간 경우는 쌍다옴표로 묶어줘야 함
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: client_secret_post
        provider:
            kakao:
              authorization-uri: https://kauth.kakao.com/oauth/authorize
              token-uri: https://kauth.kakao.com/oauth/token
              # oauth 서버로부터 유저 정보 불러오기
              user-info-uri: https://kapi.kakao.com/v2/user/me
              # 서비스의 식별자를 명시해주기 : 카카오는 id
              user-name-attribute: id



# 세션 유지 시간
#server:
#  servlet:
#    session:
#      timeout: 30m
---
# @DataJpaTest 어노테이션을 사용하면, 자동으로 Jpa가 미리 준비한 Db로 테스트를 하게 된다.
# 그것보단 테스트 DB를 따로 지정하고 싶을 때 아래와 같이 설정한 후
# 테스트 클래스에 @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE) 으로 설정하면 된다.

#spring:
#  config:
#    activate:
#      on-profile: testdb
#  datasource:
#    url: jdbc:h2:mem:board;mode=mysql
#    driver-class-name: org.h2.Driver
#  sql:
#    init:
#      mode: always
#  test.database.replace: none